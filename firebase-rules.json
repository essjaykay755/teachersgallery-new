{
  "firestore": {
    "rules": "service cloud.firestore {\n  match /databases/{database}/documents {\n    // Allow users to read and write their own data\n    match /users/{userId} {\n      allow create: if request.auth != null;\n      allow read, update, delete: if request.auth != null && request.auth.uid == userId;\n    }\n    \n    // Allow direct access to teachers collection\n    match /teachers/{teacherId} {\n      allow read: if true;\n      allow write: if request.auth != null && request.auth.uid == teacherId;\n    }\n    \n    // Allow direct access to students collection\n    match /students/{studentId} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == studentId;\n    }\n    \n    // Allow direct access to parents collection\n    match /parents/{parentId} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == parentId;\n    }\n    \n    // Keep original nested structure for backward compatibility\n    match /profiles/teachers/{teacherId} {\n      allow read: if true;\n      allow write: if request.auth != null && request.auth.uid == teacherId;\n    }\n    \n    match /profiles/students/{studentId} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == studentId;\n    }\n    \n    match /profiles/parents/{parentId} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == parentId;\n    }\n    \n    // Allow users to read/write their own messages\n    match /messages/{messageId} {\n      allow read: if request.auth != null && (resource.data.senderId == request.auth.uid || resource.data.recipientId == request.auth.uid);\n      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;\n    }\n    \n    // Allow phone number request management\n    match /phoneNumberRequests/{requestId} {\n      allow read: if request.auth != null && (resource.data.requesterId == request.auth.uid || resource.data.teacherId == request.auth.uid);\n      allow create: if request.auth != null && request.resource.data.requesterId == request.auth.uid;\n      allow update: if request.auth != null && resource.data.teacherId == request.auth.uid;\n    }\n    \n    // Allow notifications\n    match /notifications/{notificationId} {\n      allow read: if request.auth != null && resource.data.userId == request.auth.uid;\n      allow create: if request.auth != null;\n    }\n  }\n}",
    "indexes": "{\n  \"indexes\": [],\n  \"fieldOverrides\": []\n}"
  },
  "storage": {
    "rules": "service firebase.storage {\n  match /b/{bucket}/o {\n    // Allow users to upload their own avatars\n    match /avatars/{userId} {\n      allow read: if true;\n      allow write: if request.auth != null && request.auth.uid == userId;\n    }\n    \n    // Default rule - deny all access\n    match /{allPaths=**} {\n      allow read, write: if false;\n    }\n  }\n}"
  }
} 